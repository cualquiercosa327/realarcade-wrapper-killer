<html>
<head>
<title>Inno Pascal README</title>
</head>
<body>

<p>
Inno Pascal 0.1.4<br>
Copyright (C) 2000 Jordan Russell<br>
For conditions of distribution and use, see LICENSE.TXT.<br>
Home page: <a href="http://www.jrsoftware.org/">http://www.jrsoftware.org/</a><br>
Current Inno Pascal home page: <a href="http://other.jrsoftware.org/ip/">http://other.jrsoftware.org/ip/</a><br>
E-mail: jr @ jrsoftware.org

<h2>Miscellaneous notes</h2>

<p>Some limitations of existing features:

<ul>
<li>The linker currently has a limit of 512 bytes on the code and import data sections. This would not be difficult to fix; I just haven't gotten around to it yet.
<li>Only supported types are Integer, Cardinal, Longint, LongWord, and PChar. (Actually there are smaller types like Bytes, Words, etc. but they don't work yet; don't use them.)
<li>Expressions are supported in variable assignments, but they must be surrounded by "<tt>expr()</tt>". For example: "<tt>A := expr(1 + 2 * 3);</tt>". Four operators are currently supported: <tt>+ - * div</tt>; parentheses may also be used. Functions may be called inside expressions. The code generated by expressions is far from optimal; every term is pushed and popped from the stack.
<li>Functions cannot be called inside a function's parameter list, e.g. "<tt>MessageBox(0, GetCommandLine, 'Title', MB_ICONQUESTION);</tt>". Also, expressions can't currently be used in a function's parameters list either.
<li>While it supports declaration of local variables, they are actually internally stored as global variables (like "static" variables in C). So don't try recursively calling a procedure yet.
<li>Non-<tt>external</tt> procedures can't take parameters yet (since it doesn't have any stack handling support yet).
<li><tt>stdcall</tt> is the only supported calling convention
</ul>

<p>Important features it's lacking:

<ul>
<li>"<tt>if</tt>"s
<li>boolean expressions (i.e. <tt>A <> B</tt>)
<li>... and more
</ul>

<p>Interesting things it already supports:

<ul>
<li>Compiler warns about uninitialized and unused variables. (Still needs some work, however. "<tt>A := MessageBeep(A)</tt>" doesn't warn about A being uninitialized.)
<li>Compiler automatically removes unused variables, imports, and procedures.
<li>It supports procedures and nested procedures. Constants, variables, and procedures declared inside a procedure are local only to that procedure.
</ul>


<h2>Credits</h2>

<p>Others who have contributed to the project:

<ul>
<li>Developers of mwEdit/SynEdit - the excellent syntax highlighting code editor used in the IDE.
<li>Michael Hieke - improvements to IDE's editor, debugger, and compiler.
</ul>

</body>
</html>